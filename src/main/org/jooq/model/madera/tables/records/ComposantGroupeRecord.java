/*
 * This file is generated by jOOQ.
 */
package org.jooq.model.madera.tables.records;


import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.model.madera.tables.ComposantGroupe;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ComposantGroupeRecord extends UpdatableRecordImpl<ComposantGroupeRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = -577791694;

    /**
     * Setter for <code>madera.composant_groupe.i_composant_groupe_id</code>.
     */
    public void setIComposantGroupeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>madera.composant_groupe.i_composant_groupe_id</code>.
     */
    public Integer getIComposantGroupeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>madera.composant_groupe.v_libelle_groupe</code>.
     */
    public void setVLibelleGroupe(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>madera.composant_groupe.v_libelle_groupe</code>.
     */
    public String getVLibelleGroupe() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ComposantGroupe.COMPOSANT_GROUPE.I_COMPOSANT_GROUPE_ID;
    }

    @Override
    public Field<String> field2() {
        return ComposantGroupe.COMPOSANT_GROUPE.V_LIBELLE_GROUPE;
    }

    @Override
    public Integer component1() {
        return getIComposantGroupeId();
    }

    @Override
    public String component2() {
        return getVLibelleGroupe();
    }

    @Override
    public Integer value1() {
        return getIComposantGroupeId();
    }

    @Override
    public String value2() {
        return getVLibelleGroupe();
    }

    @Override
    public ComposantGroupeRecord value1(Integer value) {
        setIComposantGroupeId(value);
        return this;
    }

    @Override
    public ComposantGroupeRecord value2(String value) {
        setVLibelleGroupe(value);
        return this;
    }

    @Override
    public ComposantGroupeRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ComposantGroupeRecord
     */
    public ComposantGroupeRecord() {
        super(ComposantGroupe.COMPOSANT_GROUPE);
    }

    /**
     * Create a detached, initialised ComposantGroupeRecord
     */
    public ComposantGroupeRecord(Integer iComposantGroupeId, String vLibelleGroupe) {
        super(ComposantGroupe.COMPOSANT_GROUPE);

        set(0, iComposantGroupeId);
        set(1, vLibelleGroupe);
    }
}
