/*
 * This file is generated by jOOQ.
 */
package com.madera.jooq.tables.records;


import com.madera.jooq.tables.ModuleComposant;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModuleComposantRecord extends TableRecordImpl<ModuleComposantRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1262374598;

    /**
     * Setter for <code>madera.module_composant.i_module_id</code>.
     */
    public void setIModuleId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>madera.module_composant.i_module_id</code>.
     */
    public Integer getIModuleId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>madera.module_composant.i_composant_id</code>.
     */
    public void setIComposantId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>madera.module_composant.i_composant_id</code>.
     */
    public Integer getIComposantId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>madera.module_composant.i_ordre</code>.
     */
    public void setIOrdre(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>madera.module_composant.i_ordre</code>.
     */
    public Integer getIOrdre() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ModuleComposant.MODULE_COMPOSANT.I_MODULE_ID;
    }

    @Override
    public Field<Integer> field2() {
        return ModuleComposant.MODULE_COMPOSANT.I_COMPOSANT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return ModuleComposant.MODULE_COMPOSANT.I_ORDRE;
    }

    @Override
    public Integer component1() {
        return getIModuleId();
    }

    @Override
    public Integer component2() {
        return getIComposantId();
    }

    @Override
    public Integer component3() {
        return getIOrdre();
    }

    @Override
    public Integer value1() {
        return getIModuleId();
    }

    @Override
    public Integer value2() {
        return getIComposantId();
    }

    @Override
    public Integer value3() {
        return getIOrdre();
    }

    @Override
    public ModuleComposantRecord value1(Integer value) {
        setIModuleId(value);
        return this;
    }

    @Override
    public ModuleComposantRecord value2(Integer value) {
        setIComposantId(value);
        return this;
    }

    @Override
    public ModuleComposantRecord value3(Integer value) {
        setIOrdre(value);
        return this;
    }

    @Override
    public ModuleComposantRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ModuleComposantRecord
     */
    public ModuleComposantRecord() {
        super(ModuleComposant.MODULE_COMPOSANT);
    }

    /**
     * Create a detached, initialised ModuleComposantRecord
     */
    public ModuleComposantRecord(Integer iModuleId, Integer iComposantId, Integer iOrdre) {
        super(ModuleComposant.MODULE_COMPOSANT);

        set(0, iModuleId);
        set(1, iComposantId);
        set(2, iOrdre);
    }
}
