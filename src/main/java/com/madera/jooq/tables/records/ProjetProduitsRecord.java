/*
 * This file is generated by jOOQ.
 */
package com.madera.jooq.tables.records;


import com.madera.jooq.tables.ProjetProduits;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjetProduitsRecord extends UpdatableRecordImpl<ProjetProduitsRecord> implements Record2<Integer, Integer> {

    private static final long serialVersionUID = 397854730;

    /**
     * Setter for <code>madera.projet_produits.i_projet_id</code>.
     */
    public void setIProjetId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>madera.projet_produits.i_projet_id</code>.
     */
    public Integer getIProjetId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>madera.projet_produits.i_produit_id</code>.
     */
    public void setIProduitId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>madera.projet_produits.i_produit_id</code>.
     */
    public Integer getIProduitId() {
        return (Integer) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Integer, Integer> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, Integer> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, Integer> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ProjetProduits.PROJET_PRODUITS.I_PROJET_ID;
    }

    @Override
    public Field<Integer> field2() {
        return ProjetProduits.PROJET_PRODUITS.I_PRODUIT_ID;
    }

    @Override
    public Integer component1() {
        return getIProjetId();
    }

    @Override
    public Integer component2() {
        return getIProduitId();
    }

    @Override
    public Integer value1() {
        return getIProjetId();
    }

    @Override
    public Integer value2() {
        return getIProduitId();
    }

    @Override
    public ProjetProduitsRecord value1(Integer value) {
        setIProjetId(value);
        return this;
    }

    @Override
    public ProjetProduitsRecord value2(Integer value) {
        setIProduitId(value);
        return this;
    }

    @Override
    public ProjetProduitsRecord values(Integer value1, Integer value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProjetProduitsRecord
     */
    public ProjetProduitsRecord() {
        super(ProjetProduits.PROJET_PRODUITS);
    }

    /**
     * Create a detached, initialised ProjetProduitsRecord
     */
    public ProjetProduitsRecord(Integer iProjetId, Integer iProduitId) {
        super(ProjetProduits.PROJET_PRODUITS);

        set(0, iProjetId);
        set(1, iProduitId);
    }
}
