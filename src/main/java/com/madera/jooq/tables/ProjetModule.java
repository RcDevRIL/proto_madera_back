/*
 * This file is generated by jOOQ.
 */
package com.madera.jooq.tables;


import com.madera.jooq.Indexes;
import com.madera.jooq.Keys;
import com.madera.jooq.Madera;
import com.madera.jooq.tables.records.ProjetModuleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProjetModule extends TableImpl<ProjetModuleRecord> {

    private static final long serialVersionUID = 1751039184;

    /**
     * The reference instance of <code>madera.projet_module</code>
     */
    public static final ProjetModule PROJET_MODULE = new ProjetModule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProjetModuleRecord> getRecordType() {
        return ProjetModuleRecord.class;
    }

    /**
     * The column <code>madera.projet_module.i_projet_module_id</code>.
     */
    public final TableField<ProjetModuleRecord, Integer> I_PROJET_MODULE_ID = createField(DSL.name("i_projet_module_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('madera.projet_module_i_projet_module_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>madera.projet_module.i_projet_id</code>.
     */
    public final TableField<ProjetModuleRecord, Integer> I_PROJET_ID = createField(DSL.name("i_projet_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>madera.projet_module.i_module_id</code>.
     */
    public final TableField<ProjetModuleRecord, Integer> I_MODULE_ID = createField(DSL.name("i_module_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>madera.projet_module</code> table reference
     */
    public ProjetModule() {
        this(DSL.name("projet_module"), null);
    }

    /**
     * Create an aliased <code>madera.projet_module</code> table reference
     */
    public ProjetModule(String alias) {
        this(DSL.name(alias), PROJET_MODULE);
    }

    /**
     * Create an aliased <code>madera.projet_module</code> table reference
     */
    public ProjetModule(Name alias) {
        this(alias, PROJET_MODULE);
    }

    private ProjetModule(Name alias, Table<ProjetModuleRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProjetModule(Name alias, Table<ProjetModuleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ProjetModule(Table<O> child, ForeignKey<O, ProjetModuleRecord> key) {
        super(child, key, PROJET_MODULE);
    }

    @Override
    public Schema getSchema() {
        return Madera.MADERA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FK_MODULE_IDX, Indexes.FK_PROJET_IDX_3, Indexes.PROJET_MODULE_PKEY);
    }

    @Override
    public Identity<ProjetModuleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PROJET_MODULE;
    }

    @Override
    public UniqueKey<ProjetModuleRecord> getPrimaryKey() {
        return Keys.PROJET_MODULE_PKEY;
    }

    @Override
    public List<UniqueKey<ProjetModuleRecord>> getKeys() {
        return Arrays.<UniqueKey<ProjetModuleRecord>>asList(Keys.PROJET_MODULE_PKEY);
    }

    @Override
    public List<ForeignKey<ProjetModuleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProjetModuleRecord, ?>>asList(Keys.PROJET_MODULE__FK_PROJET_2, Keys.PROJET_MODULE__FK_MODULE_2);
    }

    public Projet projet() {
        return new Projet(this, Keys.PROJET_MODULE__FK_PROJET_2);
    }

    public Module module() {
        return new Module(this, Keys.PROJET_MODULE__FK_MODULE_2);
    }

    @Override
    public ProjetModule as(String alias) {
        return new ProjetModule(DSL.name(alias), this);
    }

    @Override
    public ProjetModule as(Name alias) {
        return new ProjetModule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProjetModule rename(String name) {
        return new ProjetModule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProjetModule rename(Name name) {
        return new ProjetModule(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
