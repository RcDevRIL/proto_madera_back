/*
 * This file is generated by jOOQ.
 */
package com.madera.jooq.tables;


import com.madera.jooq.Indexes;
import com.madera.jooq.Keys;
import com.madera.jooq.Madera;
import com.madera.jooq.tables.records.ProduitModuleRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.JSONB;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProduitModule extends TableImpl<ProduitModuleRecord> {

    private static final long serialVersionUID = -1916263390;

    /**
     * The reference instance of <code>madera.produit_module</code>
     */
    public static final ProduitModule PRODUIT_MODULE = new ProduitModule();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProduitModuleRecord> getRecordType() {
        return ProduitModuleRecord.class;
    }

    /**
     * The column <code>madera.produit_module.i_produit_module_id</code>.
     */
    public final TableField<ProduitModuleRecord, Integer> I_PRODUIT_MODULE_ID = createField(DSL.name("i_produit_module_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('madera.produit_module_i_produit_module_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>madera.produit_module.i_produit_id</code>.
     */
    public final TableField<ProduitModuleRecord, Integer> I_PRODUIT_ID = createField(DSL.name("i_produit_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>madera.produit_module.i_module_id</code>.
     */
    public final TableField<ProduitModuleRecord, Integer> I_MODULE_ID = createField(DSL.name("i_module_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>madera.produit_module.v_produit_module_nom</code>.
     */
    public final TableField<ProduitModuleRecord, String> V_PRODUIT_MODULE_NOM = createField(DSL.name("v_produit_module_nom"), org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * The column <code>madera.produit_module.v_produit_module_angle</code>.
     */
    public final TableField<ProduitModuleRecord, String> V_PRODUIT_MODULE_ANGLE = createField(DSL.name("v_produit_module_angle"), org.jooq.impl.SQLDataType.VARCHAR(30), this, "");

    /**
     * The column <code>madera.produit_module.j_section_longueur</code>.
     */
    public final TableField<ProduitModuleRecord, JSONB> J_SECTION_LONGUEUR = createField(DSL.name("j_section_longueur"), org.jooq.impl.SQLDataType.JSONB, this, "");

    /**
     * Create a <code>madera.produit_module</code> table reference
     */
    public ProduitModule() {
        this(DSL.name("produit_module"), null);
    }

    /**
     * Create an aliased <code>madera.produit_module</code> table reference
     */
    public ProduitModule(String alias) {
        this(DSL.name(alias), PRODUIT_MODULE);
    }

    /**
     * Create an aliased <code>madera.produit_module</code> table reference
     */
    public ProduitModule(Name alias) {
        this(alias, PRODUIT_MODULE);
    }

    private ProduitModule(Name alias, Table<ProduitModuleRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProduitModule(Name alias, Table<ProduitModuleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ProduitModule(Table<O> child, ForeignKey<O, ProduitModuleRecord> key) {
        super(child, key, PRODUIT_MODULE);
    }

    @Override
    public Schema getSchema() {
        return Madera.MADERA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FK_PROJET_IDX_3, Indexes.PRODUIT_MODULE_PKEY);
    }

    @Override
    public Identity<ProduitModuleRecord, Integer> getIdentity() {
        return Keys.IDENTITY_PRODUIT_MODULE;
    }

    @Override
    public UniqueKey<ProduitModuleRecord> getPrimaryKey() {
        return Keys.PRODUIT_MODULE_PKEY;
    }

    @Override
    public List<UniqueKey<ProduitModuleRecord>> getKeys() {
        return Arrays.<UniqueKey<ProduitModuleRecord>>asList(Keys.PRODUIT_MODULE_PKEY);
    }

    @Override
    public List<ForeignKey<ProduitModuleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ProduitModuleRecord, ?>>asList(Keys.PRODUIT_MODULE__FK_PRODUIT_MODULE, Keys.PRODUIT_MODULE__FK_MODULE_2);
    }

    public Produit produit() {
        return new Produit(this, Keys.PRODUIT_MODULE__FK_PRODUIT_MODULE);
    }

    public Module module() {
        return new Module(this, Keys.PRODUIT_MODULE__FK_MODULE_2);
    }

    @Override
    public ProduitModule as(String alias) {
        return new ProduitModule(DSL.name(alias), this);
    }

    @Override
    public ProduitModule as(Name alias) {
        return new ProduitModule(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProduitModule rename(String name) {
        return new ProduitModule(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProduitModule rename(Name name) {
        return new ProduitModule(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, Integer, String, String, JSONB> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
