/*
 * This file is generated by jOOQ.
 */
package com.madera.jooq.tables;


import com.madera.jooq.Indexes;
import com.madera.jooq.Keys;
import com.madera.jooq.Madera;
import com.madera.jooq.tables.records.ComposantReferentielRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ComposantReferentiel extends TableImpl<ComposantReferentielRecord> {

    private static final long serialVersionUID = -1576187026;

    /**
     * The reference instance of <code>madera.composant_referentiel</code>
     */
    public static final ComposantReferentiel COMPOSANT_REFERENTIEL = new ComposantReferentiel();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ComposantReferentielRecord> getRecordType() {
        return ComposantReferentielRecord.class;
    }

    /**
     * The column <code>madera.composant_referentiel.i_composant_referentiel_id</code>.
     */
    public final TableField<ComposantReferentielRecord, Integer> I_COMPOSANT_REFERENTIEL_ID = createField(DSL.name("i_composant_referentiel_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>madera.composant_referentiel.v_caracteristique</code>.
     */
    public final TableField<ComposantReferentielRecord, String> V_CARACTERISTIQUE = createField(DSL.name("v_caracteristique"), org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * The column <code>madera.composant_referentiel.v_unite_usage</code>.
     */
    public final TableField<ComposantReferentielRecord, String> V_UNITE_USAGE = createField(DSL.name("v_unite_usage"), org.jooq.impl.SQLDataType.VARCHAR(45), this, "");

    /**
     * Create a <code>madera.composant_referentiel</code> table reference
     */
    public ComposantReferentiel() {
        this(DSL.name("composant_referentiel"), null);
    }

    /**
     * Create an aliased <code>madera.composant_referentiel</code> table reference
     */
    public ComposantReferentiel(String alias) {
        this(DSL.name(alias), COMPOSANT_REFERENTIEL);
    }

    /**
     * Create an aliased <code>madera.composant_referentiel</code> table reference
     */
    public ComposantReferentiel(Name alias) {
        this(alias, COMPOSANT_REFERENTIEL);
    }

    private ComposantReferentiel(Name alias, Table<ComposantReferentielRecord> aliased) {
        this(alias, aliased, null);
    }

    private ComposantReferentiel(Name alias, Table<ComposantReferentielRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> ComposantReferentiel(Table<O> child, ForeignKey<O, ComposantReferentielRecord> key) {
        super(child, key, COMPOSANT_REFERENTIEL);
    }

    @Override
    public Schema getSchema() {
        return Madera.MADERA;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.COMPOSANT_REFERENTIEL_PKEY);
    }

    @Override
    public UniqueKey<ComposantReferentielRecord> getPrimaryKey() {
        return Keys.COMPOSANT_REFERENTIEL_PKEY;
    }

    @Override
    public List<UniqueKey<ComposantReferentielRecord>> getKeys() {
        return Arrays.<UniqueKey<ComposantReferentielRecord>>asList(Keys.COMPOSANT_REFERENTIEL_PKEY);
    }

    @Override
    public ComposantReferentiel as(String alias) {
        return new ComposantReferentiel(DSL.name(alias), this);
    }

    @Override
    public ComposantReferentiel as(Name alias) {
        return new ComposantReferentiel(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ComposantReferentiel rename(String name) {
        return new ComposantReferentiel(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ComposantReferentiel rename(Name name) {
        return new ComposantReferentiel(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
